Paquetes spnet
install-package Microsoft.EntityFrameworkCore.SqlServer
install-package Microsoft.EntityFrameworkCore.Tools
install-package Microsoft.EntityFrameworkCore.SqlServer.Design

Add-migration InitialCreate -o Data/Migrations
--------------
appsettingd
"ConnectionStrings":{
//direccion de la conecion con la base de datso
	"DefaultConnection":""
}

Crear el directerop modelo
y la clase
crear directorio data
 y la clase HealthContext
 public HealthContext(DbContextOptions options) : base(options) { }
        protected override void OnModelCreating(ModelBuilder builder)
        {
            base.OnModelCreating(builder);
        }

        public DbSet<City> Cities { get; set; }

--Dummydata
 public static void Initialize(IApplicationBuilder app)
        {
            using (var serviceScope = app.ApplicationServices.GetService<IServiceScopeFactory>().CreateScope())
            {
                var context = serviceScope.ServiceProvider.GetService<HealthContext>();
                context.Database.EnsureCreated();
                //context.Database.Migrate();

                // Look for any ailments
                if (context.Cities != null && context.Cities.Any())
                    return;   // DB has already been seeded

                var cities = GetAilments().ToArray();
                context.Cities.AddRange(cities);
                context.SaveChanges();

               
            }
        }

        public static List<City> GetAilments()
        {
            List<City> cities = new List<City>() {
                new City {Descripcion="clima calido",Pais="PERU", Fecha="12/11/2019",Hora="16:15"},
                new City {Descripcion="clima calido",Pais="COLOMBIA", Fecha="02/11/2019",Hora="11:15"},
                new City {Descripcion="clima calido",Pais="ECUADOR", Fecha="10/11/2019",Hora="07:15"},
                new City {Descripcion="clima calido",Pais="BRASIL", Fecha="20/11/2019",Hora="10:15"}
            };
            return cities;
        }
//,odificar la clase starup
services.AddDbContext<HealthContext>(options =>
            options.UseSqlServer(Configuration.GetConnectionString("DefaultConnection")));
         
en la funcion Configure
agregar el domi data  y inicialisar  

public class ApiClient {

    private static final String BASE_URL = "http://your-domain-name.000webhostapp.com/";
    private static Retrofit retrofit;

    public static Retrofit getApiClient() {

        if (retrofit == null) {
            retrofit = new Retrofit.Builder()
                    .baseUrl(BASE_URL)
                    .addConverterFactory(GsonConverterFactory.create())
                    .build();
        }

        return retrofit;
    }

}
ApiInterfce.java
import com.haerulmuttaqin.mynotesapp.model.Note;

import java.util.List;

import retrofit2.Call;
import retrofit2.http.Field;
import retrofit2.http.FormUrlEncoded;
import retrofit2.http.GET;
import retrofit2.http.POST;

public interface ApiInterface {

    @FormUrlEncoded
    @POST("save.php")
    Call<Note> saveNote(
        @Field("title") String title,
        @Field("note") String note,
        @Field("color") int color
    );

    @GET("notes.php")
    Call<List<Note>> getNotes();

    @FormUrlEncoded
    @POST("update.php")
    Call<Note> updateNote(
            @Field("id") int id,
            @Field("title") String title,
            @Field("note") String note,
            @Field("color") int color
    );

    @FormUrlEncoded
    @POST("delete.php")
    Call<Note> deleteNote( @Field("id") int id );

}

    @Expose
    @SerializedName("id") private int id;
    @Expose
    @SerializedName("title") private String title;
    @Expose
    @SerializedName("note") private String note;
    @Expose
    @SerializedName("color") private int color;
    @Expose
    @SerializedName("date") private String date;
    @Expose
    @SerializedName("success") private Boolean success;
    @Expose
    @SerializedName("message") private String message;
implementation 'com.android.support:design:27.1.1'
implementation 'com.android.support:recyclerview-v7:27.1.1'
implementation 'com.android.support:cardview-v7:27.1.1'
implementation 'com.squareup.retrofit2:retrofit:2.4.0'
implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
implementation 'com.thebluealliance:spectrum:0.7.1'
colors.xml


